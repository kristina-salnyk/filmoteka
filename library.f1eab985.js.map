{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,0BCAAC,EAAAD,EAAA,SCEaE,GAFbD,EAAAD,EAAA,SAEsC,SAAAG,GACpCF,EAAAG,QAAKC,WAAWC,UAAUC,IAAI,sBAC9BN,EAAAG,QAAKI,SAASF,UAAUG,OAAO,qB,GCJjCC,EAAAV,EAAA,S,mEAQaW,EAAuB,SAAAR,GAClCF,EAAAG,QAAKI,SAASF,UAAUC,IAAI,sBAC5BN,EAAAG,QAAKC,WAAWC,UAAUG,OAAO,sBACjC,IAAMG,EAAgBC,EAAAT,QAAQU,KAAKC,EAAAX,QAAIY,cACvCC,QAAQC,IAAIN,GACZO,EAAgBP,GAAeQ,MAAK,SAAAC,GAClC,IAAMC,EAAO,CACXC,QAASF,EACTG,YAAaH,EAAKI,OAAS,GAC3BC,cAAeL,EAAKI,QAEtBE,EAAwBL,E,KAItBH,EAAkB,SAAAS,GACtB,IAAMC,EAAgBD,EAAIE,KAAI,SAAAC,G,OAAM,EAAAC,EAAAC,gBAAeF,E,IAEnD,OADeG,QAAQC,IAAIN,E,EAIvBF,EAA0B,SAAAN,GAC9B,IACEe,EAGEf,EAHFE,QACAc,EAEEhB,EAFFG,YAEEH,EADFK,eAGF,EAAAY,EAAAlC,SAAiBiC,EAAYE,EAAoBC,MAEjD,IAAMC,EAAaL,EAAON,KAAI,SAAAY,GAC5B,IAAMC,EAAUC,EAAAlC,EAAA,IAAKgC,GACrBC,EAAQE,OAASH,EAAKG,OAAOf,KAAI,SAAAgB,G,OAASA,EAAMC,I,IAAMC,KAAK,MAC3D,IAAMC,EAAc,IAAIC,KAAKR,EAAmB,cAGhD,OAFAC,EAAQQ,KAAOF,EAAYG,cAC3BT,EAAQU,KAAOX,EAAmB,aAAEY,QAAQ,GACrCX,C,IAGTY,EAAcC,oBAAoBf,E,eFjCpCc,EAAe,CAAEE,yBATgB,WAC/BxD,EAAAG,QAAKC,WAAWqD,iBAAiB,QAASxD,GAC1CD,EAAAG,QAAKI,SAASkD,iBAAiB,QAAS/C,E,EAOC6C,oBAJf,SAAApB,GAC1BnC,EAAAG,QAAKuD,eAAeC,WAAY,EAAAC,EAAAzD,SAAWgC,E,2BDNtC,IAAMG,EAAsB,IAAI,EAAAuB,EAAA1D,S,SAMxB2D,I,OAAAA,EAAfnB,EAAA7C,EAAA,CAAA6C,EAAAoB,GAAAC,MAAA,SAAAC,I,kEACEX,EAAcE,2B,4CADcU,MAAAC,KAAAC,U,oBAAfN,EAAeI,MAAAC,KAAAC,U,EAJ9BC,GAAkBC,OAAM,SAAAC,GACtBC,EAAArE,QAAcsE,e","sources":["src/library.js","src/js/ui/library-page-ui.js","src/js/handlers/watchedTabClickHandler.js","src/js/handlers/queueTabClickHandler.js"],"sourcesContent":["import MovieConfigs from './js/MovieConfigs';\nimport libraryPageUi from './js/ui/library-page-ui';\nimport notifications from './js/notifications';\nimport { fetchGenresList } from './js/api/movie-api/fetchGenresList';\n\nexport const libraryMovieConfigs = new MovieConfigs();\n\ninitLibraryPage().catch(error => {\n  notifications.failedRequest();\n});\n\nasync function initLibraryPage() {\n  libraryPageUi.setLibraryEventListeners();\n}\n","import refs from '../refs/refs';\nimport { watchedTabClickHandler } from '../handlers/watchedTabClickHandler';\nimport { queueTabClickHandler } from '../handlers/queueTabClickHandler';\nimport movieCards from '../../templates/movie-card.hbs';\n\nconst setLibraryEventListeners = () => {\n  refs.watchedTab.addEventListener('click', watchedTabClickHandler);\n  refs.queueTab.addEventListener('click', queueTabClickHandler);\n};\n\nconst appendGalleryMarkup = movies => {\n  refs.libraryGallery.innerHTML = movieCards(movies);\n};\n\nexport default { setLibraryEventListeners, appendGalleryMarkup };\n","import refs from '../refs/refs';\n\nexport const watchedTabClickHandler = event => {\n  refs.watchedTab.classList.add('tabs__btn--current');\n  refs.queueTab.classList.remove('tabs__btn--current');\n};\n","import refs from '../refs/refs';\nimport storage from '../local-storage/local-storage-service';\nimport key from '../local-storage/local-storage-keys';\nimport { fetchMovieById } from '../api/movie-api/fetchMovieById';\nimport { libraryMovieConfigs } from '../../library';\nimport libraryPageUi from '../ui/library-page-ui';\nimport paginationMarkup from '../pagination';\n\nexport const queueTabClickHandler = event => {\n  refs.queueTab.classList.add('tabs__btn--current');\n  refs.watchedTab.classList.remove('tabs__btn--current');\n  const queueMovieIds = storage.load(key.QUEUE_MOVIES);\n  console.log(queueMovieIds);\n  processMovieIds(queueMovieIds).then(data => {\n    const test = {\n      results: data,\n      total_pages: data.length / 20,\n      total_results: data.length,\n    };\n    renderLibraryMoviesData(test);\n  });\n};\n\nconst processMovieIds = ids => {\n  const movieRequests = ids.map(id => fetchMovieById(id));\n  const result = Promise.all(movieRequests);\n  return result;\n};\n\nconst renderLibraryMoviesData = data => {\n  const {\n    results: movies,\n    total_pages: totalPages,\n    total_results: totalResults,\n  } = data;\n\n  paginationMarkup(totalPages, libraryMovieConfigs.page);\n\n  const moviesData = movies.map(item => {\n    const newItem = { ...item };\n    newItem.genres = item.genres.map(genre => genre.name).join(', ');\n    const releaseDate = new Date(item['release_date']);\n    newItem.year = releaseDate.getFullYear();\n    newItem.vote = item['vote_average'].toFixed(1);\n    return newItem;\n  });\n\n  libraryPageUi.appendGalleryMarkup(moviesData);\n};\n"],"names":["$bpxeT","parcelRequire","$cqmI4","$b7a091296392bda0$export$1d0eac70273ba650","event","default","watchedTab","classList","add","queueTab","remove","$dDDEV","$f989e53ddbad5979$export$b893da611cba23f2","queueMovieIds","$daTbb","load","$2hVIf","QUEUE_MOVIES","console","log","$f989e53ddbad5979$var$processMovieIds","then","data","test","results","total_pages","length","total_results","$f989e53ddbad5979$var$renderLibraryMoviesData","ids","movieRequests","map","id","$bDPyF","fetchMovieById","Promise","all","movies","totalPages","$jcFG7","$cecbdd76f2d3d4bd$export$5f907f6196637931","page","moviesData","item","newItem","$parcel$interopDefault","genres","genre","name","join","releaseDate","Date","year","getFullYear","vote","toFixed","$40377827cb75a7ee$export$2e2bcd8739ae039","appendGalleryMarkup","setLibraryEventListeners","addEventListener","libraryGallery","innerHTML","$8pYMx","$l1krc","$cecbdd76f2d3d4bd$var$_initLibraryPage","$2TvXO","mark","_callee","apply","this","arguments","$cecbdd76f2d3d4bd$var$initLibraryPage","catch","error","$aYvV9","failedRequest"],"version":3,"file":"library.f1eab985.js.map"}