{"mappings":"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","sources":["src/library.js","src/js/ui/library-page-ui.js","src/js/handlers/watchedTabClickHandler.js","src/js/handlers/queueTabClickHandler.js","src/js/handlers/libraryGalleryClickHandler.js"],"sourcesContent":["import MovieConfigs from './js/MovieConfigs';\nimport libraryPageUi from './js/ui/library-page-ui';\nimport notifications from './js/notifications';\nimport './js/registration-modal';\nimport { watchedTabClickHandler } from './js/handlers/watchedTabClickHandler';\n\nexport const libraryMovieConfigs = new MovieConfigs();\n\ninitLibraryPage().catch(error => {\n  notifications.failedRequest();\n});\n\nasync function initLibraryPage() {\n  libraryPageUi.setLibraryEventListeners();\n\n  try {\n    watchedTabClickHandler();\n  } catch (error) {\n    notifications.failedRequest();\n  }\n}\n","import refs from '../refs/refs';\nimport { watchedTabClickHandler } from '../handlers/watchedTabClickHandler';\nimport { queueTabClickHandler } from '../handlers/queueTabClickHandler';\nimport { libraryGalleryClickHandler } from '../handlers/libraryGalleryClickHandler';\nimport movieCards from '../../templates/movie-card.hbs';\nimport { dynamicRefs } from '../refs/dynamicRefs';\nimport modalMovie from '../../templates/modal-for-movie.hbs';\nimport {\n  modalQueueBtnClickHandler,\n  modalWatchedBtnClickHandler,\n  onOpenModal,\n} from '../handlers/modalBtnsClickHandler';\nimport { httpsYouTubeVideo } from '../you-tube';\n\nconst setLibraryEventListeners = () => {\n  refs.watchedTab.addEventListener('click', watchedTabClickHandler);\n  refs.queueTab.addEventListener('click', queueTabClickHandler);\n  refs.libraryGallery.addEventListener('click', libraryGalleryClickHandler);\n};\n\nconst appendGalleryMarkup = movies => {\n  refs.libraryGallery.innerHTML = movieCards(movies);\n};\n\nconst appendMovieMarkup = movie => {\n  dynamicRefs().movieData.innerHTML = modalMovie(movie);\n\n  dynamicRefs().watchedBtn.addEventListener(\n    'click',\n    modalWatchedBtnClickHandler\n  );\n  dynamicRefs().queueBtn.addEventListener('click', modalQueueBtnClickHandler);\n  onOpenModal(movie.id);\n  dynamicRefs().playTrailer.addEventListener('click', httpsYouTubeVideo);\n};\n\nexport default {\n  setLibraryEventListeners,\n  appendGalleryMarkup,\n  appendMovieMarkup,\n};\n","import refs from '../refs/refs';\nimport storage from '../local-storage/local-storage-service';\nimport key from '../local-storage/local-storage-keys';\nimport { fetchMovieById } from '../api/movie-api/fetchMovieById';\nimport { libraryMovieConfigs } from '../../library';\nimport libraryPageUi from '../ui/library-page-ui';\nimport paginationMarkup from '../pagination';\n\nconst spinner = new Spinner(spinnerConfigs);\n\nexport const watchedTabClickHandler = event => {\n  refs.watchedTab.classList.add('tabs__btn--current');\n  refs.queueTab.classList.remove('tabs__btn--current');\n\n  refs.libraryGallery.innerHTML = '';\n\n  const watchedMovieIds = storage.load(key.WATCHED_MOVIES);\n  \n  if (!watchedMovieIds || watchedMovieIds.length === 0)\n    return renderEmptyLibrary();\n    \n    processMovieIds(watchedMovieIds).then(data => {\n      renderLibraryMoviesData(data);\n    });\n};\n\nconst processMovieIds = async ids => {\n  const movieRequests = ids.map(id => fetchMovieById(id));\n  const result = await Promise.all(movieRequests);\n  return result;\n};\n\nconst renderLibraryMoviesData = movies => {\n  paginationMarkup((movies.length / 20).toFixed(), libraryMovieConfigs.page);\n\n  const moviesData = movies.map(item => {\n    const newItem = { ...item };\n    newItem.genres = item.genres.map(genre => genre.name).join(', ');\n    const releaseDate = new Date(item['release_date']);\n    newItem.year = releaseDate.getFullYear();\n    newItem.vote = item['vote_average'].toFixed(1);\n    return newItem;\n  });\n\n  libraryPageUi.appendGalleryMarkup(moviesData);\n};\n\nexport default function renderEmptyLibrary() {\n  const fillerLibrary =\n    '<p class=\"empty-page__text\"> Nothing to see here<br>Add a movie please</p>';\n  refs.libraryGallery.insertAdjacentHTML('afterbegin', fillerLibrary);\n}\n","import refs from '../refs/refs';\nimport storage from '../local-storage/local-storage-service';\nimport key from '../local-storage/local-storage-keys';\nimport { fetchMovieById } from '../api/movie-api/fetchMovieById';\nimport { libraryMovieConfigs } from '../../library';\nimport libraryPageUi from '../ui/library-page-ui';\nimport paginationMarkup from '../pagination';\nimport renderEmptyLibrary from './watchedTabClickHandler';\n\nexport const queueTabClickHandler = event => {\n  refs.queueTab.classList.add('tabs__btn--current');\n  refs.watchedTab.classList.remove('tabs__btn--current');\n\n  refs.libraryGallery.innerHTML = '';\n\n  const queueMovieIds = storage.load(key.QUEUE_MOVIES);\n\n  if (!queueMovieIds || queueMovieIds.length === 0)\n    return renderEmptyLibrary();\n    \n  processMovieIds(queueMovieIds).then(data => {\n    renderLibraryMoviesData(data);\n  });\n};\n\nconst processMovieIds = ids => {\n  const movieRequests = ids.map(id => fetchMovieById(id));\n  const result = Promise.all(movieRequests);\n  return result;\n};\n\nconst renderLibraryMoviesData = movies => {\n  paginationMarkup((movies.length / 20).toFixed(), libraryMovieConfigs.page);\n\n  const moviesData = movies.map(item => {\n    const newItem = { ...item };\n    newItem.genres = item.genres.map(genre => genre.name).join(', ');\n    const releaseDate = new Date(item['release_date']);\n    newItem.year = releaseDate.getFullYear();\n    newItem.vote = item['vote_average'].toFixed(1);\n    return newItem;\n  });\n\n  libraryPageUi.appendGalleryMarkup(moviesData);\n};\n","import { fetchMovieById } from '../api/movie-api/fetchMovieById';\nimport { renderOneMovieData } from '../render/renderOneMovieData';\nimport notifications from '../notifications';\nimport libraryPageUi from '../ui/library-page-ui';\n\nexport const libraryGalleryClickHandler = async event => {\n  event.preventDefault();\n\n  const movieId = event.target.closest('a').dataset.id;\n\n  try {\n    const movieData = await fetchMovieById(movieId);\n    renderOneMovieData(movieData, libraryPageUi.appendMovieMarkup);\n  } catch (error) {\n    notifications.failedRequest();\n  }\n};\n"],"names":["$53vTJ","parcelRequire","$3ILHO","Spinner","spinnerConfigs","$7adde4241450315e$export$1d0eac70273ba650","event","default","watchedTab","classList","add","queueTab","remove","libraryGallery","innerHTML","watchedMovieIds","$4dtAK","load","$8LAK9","WATCHED_MOVIES","length","$7adde4241450315e$export$2e2bcd8739ae039","$7adde4241450315e$var$processMovieIds","then","data","$7adde4241450315e$var$renderLibraryMoviesData","async","ids","movieRequests","map","id","$ag3f1","fetchMovieById","Promise","all","movies","$2nhTy","toFixed","$ce3726a01b8ab25a$export$5f907f6196637931","page","moviesData","item","newItem","genres","genre","name","join","releaseDate","Date","year","getFullYear","vote","$a1e40e66b3fe34e7$export$2e2bcd8739ae039","appendGalleryMarkup","insertAdjacentHTML","$eae4491cd19a0087$export$b893da611cba23f2","queueMovieIds","QUEUE_MOVIES","$eae4491cd19a0087$var$processMovieIds","$eae4491cd19a0087$var$renderLibraryMoviesData","$fa56778e4fed7762$export$90eeeefc2c5f03cc","preventDefault","movieId","target","closest","dataset","movieData","$cJ4l5","renderOneMovieData","appendMovieMarkup","error","$2Dfe2","failedRequest","addEventListener","$2gAtb","movie","$hBEsZ","dynamicRefs","$b986f","watchedBtn","$9TOT1","modalWatchedBtnClickHandler","queueBtn","modalQueueBtnClickHandler","onOpenModal","playTrailer","$bZJOo","httpsYouTubeVideo","setLibraryEventListeners","$ce3726a01b8ab25a$var$initLibraryPage","catch"],"version":3,"file":"library.20791038.js.map"}