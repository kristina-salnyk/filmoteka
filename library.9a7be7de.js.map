{"mappings":"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","sources":["src/library.js","src/js/ui/library-page-ui.js","src/js/handlers/watchedTabClickHandler.js","src/js/handlers/queueTabClickHandler.js"],"sourcesContent":["import MovieConfigs from './js/MovieConfigs';\nimport libraryPageUi from './js/ui/library-page-ui';\nimport notifications from './js/notifications';\nimport { fetchGenresList } from './js/api/movie-api/fetchGenresList';\n\nexport const libraryMovieConfigs = new MovieConfigs();\n\ninitLibraryPage().catch(error => {\n  notifications.failedRequest();\n});\n\nasync function initLibraryPage() {\n  libraryPageUi.setLibraryEventListeners();\n}\n","import refs from '../refs/refs';\nimport { watchedTabClickHandler } from '../handlers/watchedTabClickHandler';\nimport { queueTabClickHandler } from '../handlers/queueTabClickHandler';\nimport movieCards from '../../templates/movie-card.hbs';\n\nconst setLibraryEventListeners = () => {\n  refs.watchedTab.addEventListener('click', watchedTabClickHandler);\n  refs.queueTab.addEventListener('click', queueTabClickHandler);\n};\n\nconst appendGalleryMarkup = movies => {\n  refs.libraryGallery.innerHTML = movieCards(movies);\n};\n\nexport default { setLibraryEventListeners, appendGalleryMarkup };\n","import refs from '../refs/refs';\nimport storage from '../local-storage/local-storage-service';\nimport key from '../local-storage/local-storage-keys';\nimport { fetchMovieById } from '../api/movie-api/fetchMovieById';\nimport { libraryMovieConfigs } from '../../library';\nimport libraryPageUi from '../ui/library-page-ui';\nimport paginationMarkup from '../pagination';\n\nexport const watchedTabClickHandler = event => {\n  refs.watchedTab.classList.add('tabs__btn--current');\n  refs.queueTab.classList.remove('tabs__btn--current');\n  refs.libraryGallery.innerHTML = '';\n  const watchedMovieIds = storage.load(key.WATCHED_MOVIES);\n  console.log(watchedMovieIds);\n    processMovieIds(watchedMovieIds).then(data => {\n      const test = {\n        results: data\n      };\n      renderLibraryMoviesData(test);\n    });\n    \n    \n};\n\nconst processMovieIds = async ( ids )=> {\n  const movieRequests = ids.map(id => fetchMovieById(id));\n  const result = await Promise.all(movieRequests);\n  return result;\n};\nconst renderLibraryMoviesData = data => {\n  const {\n    results: movies,\n    total_pages: totalPages,\n    total_results: totalResults,\n  } = data;\n\n  paginationMarkup(totalPages, libraryMovieConfigs.page);\n\n  const moviesData = movies.map(item => {\n    const newItem = { ...item };\n    newItem.genres = item.genres.map(genre => genre.name).join(', ');\n    const releaseDate = new Date(item['release_date']);\n    newItem.year = releaseDate.getFullYear();\n    newItem.vote = item['vote_average'].toFixed(1);\n    return newItem;\n  });\n\n  libraryPageUi.appendGalleryMarkup(moviesData);\n};","import refs from '../refs/refs';\nimport storage from '../local-storage/local-storage-service';\nimport key from '../local-storage/local-storage-keys';\nimport { fetchMovieById } from '../api/movie-api/fetchMovieById';\nimport { libraryMovieConfigs } from '../../library';\nimport libraryPageUi from '../ui/library-page-ui';\nimport paginationMarkup from '../pagination';\n\nexport const queueTabClickHandler = event => {\n  refs.queueTab.classList.add('tabs__btn--current');\n  refs.watchedTab.classList.remove('tabs__btn--current');\n  refs.libraryGallery.innerHTML = '';\n  const queueMovieIds = storage.load(key.QUEUE_MOVIES);\n  console.log(queueMovieIds);\n  processMovieIds(queueMovieIds).then(dat => {\n    const test = {\n      results: dat,\n      // total_pages: data.length / 20,\n      // total_results: data.length,\n    };\n    renderLibraryMoviesData(test);\n  });\n};\n\nconst processMovieIds = ids => {\n  const movieRequests = ids.map(id => fetchMovieById(id));\n  const result = Promise.all(movieRequests);\n  return result;\n};\n\nconst renderLibraryMoviesData = data => {\n  const {\n    results: movies,\n    total_pages: totalPages,\n    total_results: totalResults,\n  } = data;\n\n  paginationMarkup(totalPages, libraryMovieConfigs.page);\n\n  const moviesData = movies.map(item => {\n    const newItem = { ...item };\n    newItem.genres = item.genres.map(genre => genre.name).join(', ');\n    const releaseDate = new Date(item['release_date']);\n    newItem.year = releaseDate.getFullYear();\n    newItem.vote = item['vote_average'].toFixed(1);\n    return newItem;\n  });\n\n  libraryPageUi.appendGalleryMarkup(moviesData);\n};\n"],"names":["$bpxeT","parcelRequire","$cqmI4","$b7a091296392bda0$export$1d0eac70273ba650","event","default","watchedTab","classList","add","queueTab","remove","libraryGallery","innerHTML","watchedMovieIds","$daTbb","load","$2hVIf","WATCHED_MOVIES","console","log","$b7a091296392bda0$var$processMovieIds","then","data","$b7a091296392bda0$var$renderLibraryMoviesData","results","$parcel$interopDefault","$2TvXO","mark","_callee","ids","movieRequests","result","map","id","$bDPyF","fetchMovieById","Promise","all","_ctx","sent","movies","totalPages","total_pages","total_results","$jcFG7","$cecbdd76f2d3d4bd$export$5f907f6196637931","page","moviesData","item","newItem","$dDDEV","genres","genre","name","join","releaseDate","Date","year","getFullYear","vote","toFixed","$40377827cb75a7ee$export$2e2bcd8739ae039","appendGalleryMarkup","$f989e53ddbad5979$export$b893da611cba23f2","queueMovieIds","QUEUE_MOVIES","$f989e53ddbad5979$var$processMovieIds","dat","$f989e53ddbad5979$var$renderLibraryMoviesData","setLibraryEventListeners","addEventListener","$8pYMx","$l1krc","$cecbdd76f2d3d4bd$var$_initLibraryPage","apply","this","arguments","$cecbdd76f2d3d4bd$var$initLibraryPage","catch","error","$aYvV9","failedRequest"],"version":3,"file":"library.9a7be7de.js.map"}