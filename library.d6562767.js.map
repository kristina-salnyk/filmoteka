{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCAAC,EAAAD,EAAA,S,GCAAC,EAAAD,EAAA,S,mDAQO,MAAME,EAAyBC,IACpCF,EAAAG,QAAKC,WAAWC,UAAUC,IAAI,sBAC9BN,EAAAG,QAAKI,SAASF,UAAUG,OAAO,sBAC/BR,EAAAG,QAAKM,eAAeC,UAAY,GAChC,MAAMC,EAAkBC,EAAAT,QAAQU,KAAKC,EAAAX,QAAIY,gBACzCC,QAAQC,IAAIN,GACVO,EAAgBP,GAAiBQ,MAAKC,IAEpCC,EAAwBD,EAAK,GAC7B,EAKAF,EAAkBI,MAAQC,IAC9B,MAAMC,EAAgBD,EAAIE,KAAIC,IAAM,EAAAC,EAAAC,gBAAeF,KAEnD,aADqBG,QAAQC,IAAIN,EACpB,EAETH,EAA0BU,KAC9B,EAAAC,EAAA7B,UAAkB4B,EAAOE,OAAS,IAAIC,UAAWC,EAAoBC,MAErE,MAAMC,EAAaN,EAAON,KAAIa,IAC5B,MAAMC,EAAU,IAAKD,GACrBC,EAAQC,OAASF,EAAKE,OAAOf,KAAIgB,GAASA,EAAMC,OAAMC,KAAK,MAC3D,MAAMC,EAAc,IAAIC,KAAKP,EAAmB,cAGhD,OAFAC,EAAQO,KAAOF,EAAYG,cAC3BR,EAAQS,KAAOV,EAAmB,aAAEJ,QAAQ,GACrCK,CAAO,IAGhBU,EAAcC,oBAAoBb,EAAW,ECvC/CrC,EAAAD,EAAA,S,oDAQO,MAAMoD,EAAuBjD,IAClCF,EAAAG,QAAKI,SAASF,UAAUC,IAAI,sBAC5BN,EAAAG,QAAKC,WAAWC,UAAUG,OAAO,sBACjCR,EAAAG,QAAKM,eAAeC,UAAY,GAChC,MAAM0C,EAAgBxC,EAAAT,QAAQU,KAAKC,EAAAX,QAAIkD,cACvCrC,QAAQC,IAAImC,GACZE,EAAgBF,GAAejC,MAAKC,IAClCmC,EAAwBnC,EAAK,GAC7B,EAGEkC,EAAkB/B,IACtB,MAAMC,EAAgBD,EAAIE,KAAIC,IAAM,EAAAC,EAAAC,gBAAeF,KAEnD,OADeG,QAAQC,IAAIN,EACd,EAGT+B,EAA0BxB,KAC9B,EAAAC,EAAA7B,UAAkB4B,EAAOE,OAAS,IAAIC,UAAWC,EAAoBC,MAErE,MAAMC,EAAaN,EAAON,KAAIa,IAC5B,MAAMC,EAAU,IAAKD,GACrBC,EAAQC,OAASF,EAAKE,OAAOf,KAAIgB,GAASA,EAAMC,OAAMC,KAAK,MAC3D,MAAMC,EAAc,IAAIC,KAAKP,EAAmB,cAGhD,OAFAC,EAAQO,KAAOF,EAAYG,cAC3BR,EAAQS,KAAOV,EAAmB,aAAEJ,QAAQ,GACrCK,CAAO,IAGhBU,EAAcC,oBAAoBb,EAAW,E,qBFvB/CY,EAAe,C,yBATkB,KAC/BjD,EAAAG,QAAKC,WAAWoD,iBAAiB,QAASvD,GAC1CD,EAAAG,QAAKI,SAASiD,iBAAiB,QAASL,EAAqB,E,oBAGnCpB,IAC1B/B,EAAAG,QAAKM,eAAeC,WAAY,EAAA+C,EAAAtD,SAAW4B,EAAO,G,mCDL7C,MAAMI,EAAsB,IAAI,EAAArC,EAAAK,UAMvCmB,iBACE2B,EAAcS,0B,EALhBC,GAAkBC,OAAMC,IACtBC,EAAA3D,QAAc4D,eAAe","sources":["src/library.js","src/js/ui/library-page-ui.js","src/js/handlers/watchedTabClickHandler.js","src/js/handlers/queueTabClickHandler.js"],"sourcesContent":["import MovieConfigs from './js/MovieConfigs';\nimport libraryPageUi from './js/ui/library-page-ui';\nimport notifications from './js/notifications';\nimport './js/registration-modal';\nimport { fetchGenresList } from './js/api/movie-api/fetchGenresList';\n\nexport const libraryMovieConfigs = new MovieConfigs();\n\ninitLibraryPage().catch(error => {\n  notifications.failedRequest();\n});\n\nasync function initLibraryPage() {\n  libraryPageUi.setLibraryEventListeners();\n}\n","import refs from '../refs/refs';\nimport { watchedTabClickHandler } from '../handlers/watchedTabClickHandler';\nimport { queueTabClickHandler } from '../handlers/queueTabClickHandler';\nimport movieCards from '../../templates/movie-card.hbs';\n\nconst setLibraryEventListeners = () => {\n  refs.watchedTab.addEventListener('click', watchedTabClickHandler);\n  refs.queueTab.addEventListener('click', queueTabClickHandler);\n};\n\nconst appendGalleryMarkup = movies => {\n  refs.libraryGallery.innerHTML = movieCards(movies);\n};\n\nexport default { setLibraryEventListeners, appendGalleryMarkup };\n","import refs from '../refs/refs';\nimport storage from '../local-storage/local-storage-service';\nimport key from '../local-storage/local-storage-keys';\nimport { fetchMovieById } from '../api/movie-api/fetchMovieById';\nimport { libraryMovieConfigs } from '../../library';\nimport libraryPageUi from '../ui/library-page-ui';\nimport paginationMarkup from '../pagination';\n\nexport const watchedTabClickHandler = event => {\n  refs.watchedTab.classList.add('tabs__btn--current');\n  refs.queueTab.classList.remove('tabs__btn--current');\n  refs.libraryGallery.innerHTML = '';\n  const watchedMovieIds = storage.load(key.WATCHED_MOVIES);\n  console.log(watchedMovieIds);\n    processMovieIds(watchedMovieIds).then(data => {\n    \n      renderLibraryMoviesData(data);\n    });\n    \n    \n};\n\nconst processMovieIds = async ( ids )=> {\n  const movieRequests = ids.map(id => fetchMovieById(id));\n  const result = await Promise.all(movieRequests);\n  return result;\n};\nconst renderLibraryMoviesData = movies => {\n  paginationMarkup((movies.length / 20).toFixed(), libraryMovieConfigs.page);\n\n  const moviesData = movies.map(item => {\n    const newItem = { ...item };\n    newItem.genres = item.genres.map(genre => genre.name).join(', ');\n    const releaseDate = new Date(item['release_date']);\n    newItem.year = releaseDate.getFullYear();\n    newItem.vote = item['vote_average'].toFixed(1);\n    return newItem;\n  });\n\n  libraryPageUi.appendGalleryMarkup(moviesData);\n};","import refs from '../refs/refs';\nimport storage from '../local-storage/local-storage-service';\nimport key from '../local-storage/local-storage-keys';\nimport { fetchMovieById } from '../api/movie-api/fetchMovieById';\nimport { libraryMovieConfigs } from '../../library';\nimport libraryPageUi from '../ui/library-page-ui';\nimport paginationMarkup from '../pagination';\n\nexport const queueTabClickHandler = event => {\n  refs.queueTab.classList.add('tabs__btn--current');\n  refs.watchedTab.classList.remove('tabs__btn--current');\n  refs.libraryGallery.innerHTML = '';\n  const queueMovieIds = storage.load(key.QUEUE_MOVIES);\n  console.log(queueMovieIds);\n  processMovieIds(queueMovieIds).then(data => {\n    renderLibraryMoviesData(data);\n  });\n};\n\nconst processMovieIds = ids => {\n  const movieRequests = ids.map(id => fetchMovieById(id));\n  const result = Promise.all(movieRequests);\n  return result;\n};\n\nconst renderLibraryMoviesData = movies => {\n  paginationMarkup((movies.length / 20).toFixed(), libraryMovieConfigs.page);\n\n  const moviesData = movies.map(item => {\n    const newItem = { ...item };\n    newItem.genres = item.genres.map(genre => genre.name).join(', ');\n    const releaseDate = new Date(item['release_date']);\n    newItem.year = releaseDate.getFullYear();\n    newItem.vote = item['vote_average'].toFixed(1);\n    return newItem;\n  });\n\n  libraryPageUi.appendGalleryMarkup(moviesData);\n};"],"names":["$53vTJ","parcelRequire","$3ILHO","$7adde4241450315e$export$1d0eac70273ba650","event","default","watchedTab","classList","add","queueTab","remove","libraryGallery","innerHTML","watchedMovieIds","$4dtAK","load","$8LAK9","WATCHED_MOVIES","console","log","$7adde4241450315e$var$processMovieIds","then","data","$7adde4241450315e$var$renderLibraryMoviesData","async","ids","movieRequests","map","id","$ag3f1","fetchMovieById","Promise","all","movies","$2nhTy","length","toFixed","$ce3726a01b8ab25a$export$5f907f6196637931","page","moviesData","item","newItem","genres","genre","name","join","releaseDate","Date","year","getFullYear","vote","$a1e40e66b3fe34e7$export$2e2bcd8739ae039","appendGalleryMarkup","$eae4491cd19a0087$export$b893da611cba23f2","queueMovieIds","QUEUE_MOVIES","$eae4491cd19a0087$var$processMovieIds","$eae4491cd19a0087$var$renderLibraryMoviesData","addEventListener","$2gAtb","setLibraryEventListeners","$ce3726a01b8ab25a$var$initLibraryPage","catch","error","$2Dfe2","failedRequest"],"version":3,"file":"library.d6562767.js.map"}