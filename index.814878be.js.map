{"mappings":"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","sources":["src/index.js","src/js/ui/home-page-ui.js","src/js/api/movie-api/fetchSearchMovie.js","src/js/handlers/searchFormSubmitHandler.js","src/js/render/renderMoviesData.js","src/js/handlers/homeGalleryClickHandler.js","src/js/api/movie-api/fetchGenresList.js","src/js/api/movie-api/fetchTrendingMovies.js","src/js/footer-modal.js","src/js/loadPagePagination.js"],"sourcesContent":["import { siteConfigs } from './js/SiteConfigs';\nimport homePageUi from './js/ui/home-page-ui';\nimport notifications from './js/notifications';\nimport './js/api/firebase/fireBase';\nimport { fetchGenresList } from './js/api/movie-api/fetchGenresList';\nimport { fetchTrendingMovies } from './js/api/movie-api/fetchTrendingMovies';\nimport { renderMoviesData } from './js/render/renderMoviesData';\nimport './js/footer-modal';\nimport './js/registration-modal';\nimport './js/loadPagePagination';\nimport { spinner } from './js/spinner';\nimport refs from './js/refs/refs';\n\ninitHomePage().catch(error => {\n  notifications.failedRequest();\n});\n\nasync function initHomePage() {\n  homePageUi.setHomeEventListeners();\n\n  try {\n    spinner.spin(refs.homeGallery);\n    const genresData = await fetchGenresList();\n    const { genres } = genresData;\n    siteConfigs.genres = genres;\n\n    const trendingData = await fetchTrendingMovies();\n    spinner.stop();\n    renderMoviesData(trendingData);\n  } catch (error) {\n    notifications.failedRequest();\n  }\n}\n","import refs from '../refs/refs';\nimport { searchFormSubmitHandler } from '../handlers/searchFormSubmitHandler';\nimport { homeGalleryClickHandler } from '../handlers/homeGalleryClickHandler';\nimport { dynamicRefs } from '../refs/dynamicRefs';\nimport { trackScroll, backToTop } from '../handlers/scrollUpClickHandler';\nimport movieCards from '../../templates/movie-card.hbs';\nimport modalMovie from '../../templates/modal-for-movie.hbs';\nimport { submitRegisterForm } from '../api/firebase/fireBase';\n\nimport {\n  modalWatchedBtnClickHandler,\n  modalQueueBtnClickHandler,\n  onOpenModal,\n} from '../handlers/modalBtnsClickHandler';\nimport { httpsYouTubeVideo } from '../you-tube';\n\nconst setHomeEventListeners = () => {\n  refs.searchForm.addEventListener('submit', searchFormSubmitHandler);\n  refs.homeGallery.addEventListener('click', homeGalleryClickHandler);\n\n  refs.goTopBtn.addEventListener('click', backToTop);\n  window.addEventListener('scroll', trackScroll);\n\n  refs.registerForm.addEventListener('submit', submitRegisterForm);\n};\n\nconst appendGalleryMarkup = movies => {\n  refs.homeGallery.innerHTML = movieCards(movies);\n};\n\nconst appendMovieMarkup = movie => {\n  dynamicRefs().movieData.innerHTML = modalMovie(movie);\n\n  dynamicRefs().watchedBtn.addEventListener(\n    'click',\n    modalWatchedBtnClickHandler\n  );\n  dynamicRefs().queueBtn.addEventListener('click', modalQueueBtnClickHandler);\n  onOpenModal(movie.id);\n  dynamicRefs().playTrailer.addEventListener('click', httpsYouTubeVideo);\n};\n\nconst scrollToUp = () => {\n  window.scrollBy(0, 0);\n};\n\nexport default {\n  setHomeEventListeners,\n  appendGalleryMarkup,\n  appendMovieMarkup,\n  scrollToUp,\n};\n","import api from './api';\nimport { REQUEST_URL } from '../../constants';\nimport { siteConfigs } from '../../SiteConfigs';\nimport notifications from '../../notifications';\nimport storage from '../../local-storage/local-storage-service';\nimport key from '../../local-storage/local-storage-keys';\n\nexport const fetchSearchMovie = async () => {\n  const config = {\n    params: {\n      query: siteConfigs.searchQuery,\n      page: siteConfigs.page,\n      include_adult: siteConfigs.includeAdult,\n    },\n  };\n\n  const url = REQUEST_URL.SEARCH;\n\n  try {\n    const response = await api.get(url, config);\n    storage.save(key.LAST_FETCH, 'SEARCH');\n    return response.data;\n  } catch (error) {\n    notifications.failedRequest();\n  }\n};\n","import { siteConfigs } from '../SiteConfigs';\nimport refs from '../refs/refs';\nimport { fetchSearchMovie } from '../api/movie-api/fetchSearchMovie';\nimport { renderMoviesData } from '../render/renderMoviesData';\nimport { spinner } from '../spinner';\n\nexport const searchFormSubmitHandler = async event => {\n  event.preventDefault();\n\n  refs.searchError.style.display = 'none';\n\n  const searchQuery = event.currentTarget.elements.searchQuery.value.trim();\n\n  if (!searchQuery) {\n    refs.searchError.style.display = 'block';\n    return;\n  }\n\n  siteConfigs.setSearchQuery(searchQuery);\n\n  try {\n    spinner.spin(refs.homeGallery);\n    const searchData = await fetchSearchMovie();\n    spinner.stop();\n    renderMoviesData(searchData);\n  } catch (error) {\n    refs.searchError.style.display = 'block';\n  }\n};\n","import { siteConfigs } from '../SiteConfigs';\nimport refs from '../refs/refs';\nimport homePageUi from '../ui/home-page-ui';\nimport paginationMarkup from '../pagination';\n\nexport const renderMoviesData = data => {\n  const {\n    results: movies,\n    total_pages: totalPages,\n    total_results: totalResults,\n  } = data;\n\n  if (totalResults === 0) {\n    refs.searchError.style.display = 'block';\n    return;\n  }\n\n  paginationMarkup(totalPages, siteConfigs.page);\n\n  const moviesData = movies.map(item => {\n    const newItem = { ...item };\n    newItem.genres = item['genre_ids']\n      .map(id => siteConfigs.getGenreById(id))\n      .join(', ');\n    const releaseDate = new Date(item['release_date']);\n    newItem.year = releaseDate.getFullYear();\n    newItem.vote = item['vote_average'].toFixed(1);\n    return newItem;\n  });\n\n  homePageUi.appendGalleryMarkup(moviesData);\n};\n","import { fetchMovieById } from '../api/movie-api/fetchMovieById';\nimport { renderOneMovieData } from '../render/renderOneMovieData';\nimport notifications from '../notifications';\nimport homePageUi from '../ui/home-page-ui';\nimport { spinner } from '../spinner';\nimport refs from '../refs/refs';\n\nexport const homeGalleryClickHandler = async event => {\n  event.preventDefault();\n\n  const movieId = event.target.closest('a').dataset.id;\n\n  try {\n    spinner.spin(refs.homeGallery);\n    const movieData = await fetchMovieById(movieId);\n    spinner.stop();\n    renderOneMovieData(movieData, homePageUi.appendMovieMarkup);\n  } catch (error) {\n    notifications.failedRequest();\n  }\n};\n","import api from './api';\nimport { REQUEST_URL } from '../../constants';\nimport notifications from '../../notifications';\n\nexport const fetchGenresList = async () => {\n  const url = `${REQUEST_URL.GENRES}`;\n\n  try {\n    const response = await api.get(url);\n    return response.data;\n  } catch (error) {\n    notifications.failedRequest();\n  }\n};\n","import api from './api';\nimport { REQUEST_URL } from '../../constants';\nimport { siteConfigs } from '../../SiteConfigs';\nimport notifications from '../../notifications';\nimport storage from '../../local-storage/local-storage-service';\nimport key from '../../local-storage/local-storage-keys';\n\nexport const fetchTrendingMovies = async () => {\n  const config = {\n    params: {\n      page: siteConfigs.page,\n    },\n  };\n\n  const url = `${REQUEST_URL.TRENDING}/${siteConfigs.mediaType}/${siteConfigs.timeWindow}`;\n\n  try {\n    const response = await api.get(url, config);\n    storage.save(key.LAST_FETCH, 'TRENDING');\n    return response.data;\n  } catch (error) {\n    notifications.failedRequest();\n  }\n};\n","(() => {\n  const refs = {\n    openModalBtn: document.querySelector(\"[data-footer-modal-open]\"),\n    closeModalBtn: document.querySelector(\"[data-footer-modal-close]\"),\n    footerModal: document.querySelector(\"[data-modal]\"),\n  };\n\n  refs.openModalBtn.addEventListener(\"click\", toggleModal);\n  refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n  function toggleModal() {\n    document.body.classList.toggle(\"modal-open\");\n    refs.footerModal.classList.toggle(\"is-hidden\");\n  }\n})();","import refs from './refs/refs';\nimport { siteConfigs } from './SiteConfigs';\nimport { dynamicRefs } from './refs/dynamicRefs';\nimport { fetchTrendingMovies } from './api/movie-api/fetchTrendingMovies';\nimport { renderMoviesData } from './render/renderMoviesData';\nimport { fetchSearchMovie } from './api/movie-api/fetchSearchMovie';\nimport notifications from './notifications';\nimport storege from './local-storage/local-storage-service';\nimport key from './local-storage/local-storage-keys';\nimport { spinner } from './spinner';\n\ndynamicRefs().paginList.addEventListener('click', getNewPage);\ndynamicRefs().rightArrow.addEventListener('click', rightBtnClick);\ndynamicRefs().leftArrow.addEventListener('click', leftBtnClick);\n\nfunction leftBtnClick() {\n  siteConfigs.decrementPage();\n  refs.homeGallery.innerHTML = '';\n  loadMovies();\n}\n\nfunction rightBtnClick() {\n  siteConfigs.incrementPage();\n  refs.homeGallery.innerHTML = '';\n  loadMovies();\n}\n\nfunction getNewPage(e) {\n  e.preventDefault();\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  if (e.target.dataset.number !== '0') {\n    const page = Number(e.target.dataset.number);\n    siteConfigs.page = page;\n    refs.homeGallery.innerHTML = '';\n    loadMovies();\n  }\n}\n\nasync function loadMovies() {\n  if (storege.load(key.LAST_FETCH) === 'TRENDING') {\n    try {\n      spinner.spin(refs.homeGallery);\n      const trendingData = await fetchTrendingMovies();\n      spinner.stop();\n      renderMoviesData(trendingData);\n    } catch (error) {\n      notifications.failedRequest();\n    }\n  }\n\n  if (storege.load(key.LAST_FETCH) === 'SEARCH') {\n    try {\n      spinner.spin(refs.homeGallery);\n      const data = await fetchSearchMovie();\n      spinner.stop();\n      renderMoviesData(data);\n    } catch (error) {\n      notifications.failedRequest();\n    }\n  }\n}\n"],"names":["$oxp97","parcelRequire","$3ILHO","$3v5re","$352b644390f83377$export$b7b604fc4e6868b3","async","config","params","query","siteConfigs","searchQuery","page","include_adult","includeAdult","url","$8G1wF","REQUEST_URL","SEARCH","response","default","get","$4dtAK","save","$8LAK9","LAST_FETCH","data","error","$2Dfe2","failedRequest","$be825a0409221113$export$f7f786f89bc6ea16","results","movies","total_pages","totalPages","total_results","totalResults","searchError","style","display","$2nhTy","moviesData","map","item","newItem","genres","id","getGenreById","join","releaseDate","Date","year","getFullYear","vote","toFixed","$4a3ee2f3834c54fc$export$2e2bcd8739ae039","appendGalleryMarkup","$515f53deba1868d3$export$4e08842eeca88a89","event","preventDefault","currentTarget","elements","value","trim","setSearchQuery","$04jNI","spinner","spin","homeGallery","searchData","stop","$ag3f1","$bdd48e428274a982$export$4b0a611b144735ad","movieId","target","closest","dataset","movieData","fetchMovieById","$cJ4l5","renderOneMovieData","appendMovieMarkup","searchForm","addEventListener","goTopBtn","$9TiW2","backToTop","window","trackScroll","registerForm","$ksVbb","submitRegisterForm","innerHTML","$2gAtb","movie","$hBEsZ","dynamicRefs","$b986f","watchedBtn","$9TOT1","modalWatchedBtnClickHandler","queueBtn","modalQueueBtnClickHandler","onOpenModal","playTrailer","$bZJOo","httpsYouTubeVideo","scrollBy","$da7107c2aff43685$export$d60bdeaf43923027","GENRES","$ee7378697008c5bd$export$a2840eca364d9ff2","TRENDING","mediaType","timeWindow","refs","openModalBtn","document","querySelector","closeModalBtn","footerModal","toggleModal","body","classList","toggle","$732150c576c7596a$var$loadMovies","load","trendingData","error1","paginList","e","nodeName","number","Number","rightArrow","incrementPage","leftArrow","decrementPage","setHomeEventListeners","genresData","$1f0dc3b9307be026$var$initHomePage","catch"],"version":3,"file":"index.814878be.js.map"}